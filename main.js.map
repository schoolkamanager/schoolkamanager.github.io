{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account-service.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/schools/school-detail/classes/classes.component.css","webpack:///./src/app/schools/school-detail/classes/classes.component.html","webpack:///./src/app/schools/school-detail/classes/classes.component.ts","webpack:///./src/app/schools/school-detail/school-detail.component.css","webpack:///./src/app/schools/school-detail/school-detail.component.html","webpack:///./src/app/schools/school-detail/school-detail.component.ts","webpack:///./src/app/schools/school-detail/settings/school.service.ts","webpack:///./src/app/schools/school-detail/settings/settings.component.css","webpack:///./src/app/schools/school-detail/settings/settings.component.html","webpack:///./src/app/schools/school-detail/settings/settings.component.ts","webpack:///./src/app/schools/school-detail/students/students.component.css","webpack:///./src/app/schools/school-detail/students/students.component.html","webpack:///./src/app/schools/school-detail/students/students.component.ts","webpack:///./src/app/schools/school-detail/teachers/teachers.component.css","webpack:///./src/app/schools/school-detail/teachers/teachers.component.html","webpack:///./src/app/schools/school-detail/teachers/teachers.component.ts","webpack:///./src/app/schools/school.service.ts","webpack:///./src/app/schools/schools.component.css","webpack:///./src/app/schools/schools.component.html","webpack:///./src/app/schools/schools.component.ts","webpack:///./src/app/server.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AAC6B;AAExC;AAIhC;IAQE,+BAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAPnC,YAAO,GAAU;YACf,+CAA+C;YAC/C,IAAI,8CAAM,CAAC,OAAO,EAAE,uCAAuC,CAAC;SAC7D;QACD,iBAAY,GAAC,KAAK,CAAC;QAEnB,UAAK,GAAQ,EAAE,CAAC;IACuB,CAAC;IACxC,2CAAW,GAAX,UAAY,UAAuB,EAAE,SAAgB;QAArD,iBAYD;QAZa,oDAAY,MAAM,IAAI,CAAC;QAAE,sDAAe,CAAC;QACnD,iEAAiE;QACjE,IAAG,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAO;gBAC1B,sBAAsB;gBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAS,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;oBACzD,KAAI,CAAC,YAAY,GAAC,IAAI,CAAC;oBACvB,KAAI,CAAC,eAAe,GAAG,OAAO,CAAC,QAAQ,CAAC;oBACxC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACtB,CAAC,EAAE,UAAC,GAAG,IAAwB,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,KAAK,EAAC,KAAK,CAAC,EAAC,CAAE,CAAC;IACnB,CAAC;IACC,wCAAQ,GAAR,UAAS,QAAQ,EAAE,GAAmD;QACpE,YAAY;QADd,iBAmBC;QAnBkB,sCAAK,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,GAAC;QAGpE,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,IAAI,CAAC,eAAe,GAAC,iBAAiB,EACtC,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,EACrD;YACE,OAAO,EAAC,IAAI,gEAAW,EAAE;iBACtB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;SAC5D,CAAC;aACC,SAAS,CAAC,UAAC,IAAW;YACrB,kCAAkC;YAChC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAC;gBACtB,uBAAuB;gBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,0BAA0B;gBAC1B,GAAG,CAAC,IAAI,CAAC,CAAC;YACZ,CAAC;QACP,CAAC,CAAC,CAAC;IACT,CAAC;IAzCU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCASyB,+DAAU;OARxB,qBAAqB,CA2CjC;IAAD,4BAAC;CAAA;AA3CiC;;;;;;;;;;;;ACPlC,6BAA6B,iDAAiD,sDAAsD,MAAM,8BAA8B,YAAY,mCAAmC,2BAA2B,EAAE,cAAc,iCAAiC,yBAAyB,EAAE,OAAO,sBAAsB,YAAY,mCAAmC,2BAA2B,EAAE,cAAc,iCAAiC,yBAAyB,EAAE,OAAO,K;;;;;;;;;;;ACAxf,iQAAiQ,cAAc,0pBAA0pB,gCAAgC,2xGAA2xG,6BAA6B,6JAA6J,+MAA+M,4BAA4B,o+BAAo+B,QAAQ,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxiL;AACX;AAYlE;IAWE,sBACU,GAAqB,EACrB,cAAoC,EACpB,IAAY;QAHtC,iBAIC;QAHS,QAAG,GAAH,GAAG,CAAkB;QACrB,mBAAc,GAAd,cAAc,CAAsB;QACpB,SAAI,GAAJ,IAAI,CAAQ;QAbtC,UAAK,GAAG,KAAK,CAAC;QACd,iBAAY,GAAG,CAAC,CAAC;QACjB,oBAAe,GAAG,CAAC,CAAC;QACpB,SAAI,GAAG,EAAE,CAAC;QAEV,YAAO,GAAG;YACR,QAAQ,EAAC,UAAC,UAAU,IAAM,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAC;YACrD,OAAO,EAAC,IAAI;SACb,CAAC;QACF,SAAI,GAAG,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC;IAKpB,CAAC;IACD,+BAAQ,GAAR;QACE,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACD,+BAAQ,GAAR,UAAS,UAAU;QAAnB,iBAWC;QATC,IAAI,QAAQ,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;QACrD,IAAI,OAAO,GAAG,UAAU,CAAC,eAAe,EAAE,CAAC;QAE3C,IAAI,CAAC,OAAO,CAAC,OAAO,GAAC,OAAO,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,sFAAsF,CAAC,CAAC;QACnI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAC,IAAW;YACjD,KAAI,CAAC,YAAY,GAAC,CAAC,CAAC;YACpB,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gCAAS,GAAT;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;QACzC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YAEnB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAc,GAAd;QAAA,iBAqBC;QApBC;;;;;;;WAOG;QACA,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE;gBACvC,OAAO,EAAE,eAAe;gBACxB,OAAO,EAAE,OAAO;gBAChB,WAAW,EAAC,OAAO,CAAC,QAAQ;aAC7B,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;QACL,GAAG;IACL,CAAC;IA7DU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;QAgBG,uEAAM,CAAC,oDAAM,CAAC;yCAFH,+DAAiB;YACN,8EAAqB;YACd,oDAAM;OAd3B,YAAY,CA8DxB;IAAD,mBAAC;CAAA;AA9DwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACT;AAEF;AACgB;AAClB;AACS;AACkC;AACA;AACH;AACG;AACA;AAqBxF;IACE,mBAAY,IAAW;IAAE,CAAC;IADf,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,oGAAqB;gBACrB,oGAAiB;gBACjB,iGAAgB;gBAChB,oGAAiB;gBACjB,qGAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;aAEjB;YACD,SAAS,EAAE,EACV;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;yCAEiB,oDAAM;OADZ,SAAS,CAErB;IAAD,gBAAC;CAAA;AAFqB;;;;;;;;;;;;AChCtB,mB;;;;;;;;;;;ACAA,gD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACP7B,mB;;;;;;;;;;;ACAA,4OAA4O,UAAU,0X;;;;;;;;;;;;;;;;;;;;;;;;ACA1K;AAQ5E;IAOE,+BAAoB,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;QANzC,SAAI,GAAO;YACT,EAAC,IAAI,EAAC,UAAU,EAAC,EAAC,EAAC,IAAI,EAAC,SAAS,EAAC,EAAE,IAAI,GAAG,CAAC,UAAU,CAAC,EAAC,IAAI,GAAG,CAAC,UAAU,CAAC;SAC5E;IAI4C,CAAC;IAF9C,yCAAS,GAAT,UAAU,GAAO,IAAE,IAAI,CAAC,YAAY,GAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,GAAC;IAGlE,wCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC;IAJQ;QAAR,2DAAK,EAAE;;yDAAe;IANZ,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCASwB,+DAAiB;OAP9B,qBAAqB,CAYjC;IAAD,4BAAC;CAAA;AAZiC;AAalC;IAEE,aAAY,IAAI;QAAE,IAAI,CAAC,IAAI,GAAC,IAAI;IAAA,CAAC;IACnC,UAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB0C;AAC2B;AACE;AAKxE;IAEE,uBAAoB,cAAoC,EAAU,UAAqB;QAAnE,mBAAc,GAAd,cAAc,CAAsB;QAAU,eAAU,GAAV,UAAU,CAAW;IAAI,CAAC;IAC5F,oCAAY,GAAZ,UAAa,MAAa;QACxB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAC;YACvC,OAAO,EAAC,IAAI,gEAAW,EAAE;iBACxB,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;SAC1D,CAAC;IACJ,CAAC;IARU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGmC,8EAAqB,EAAqB,+DAAU;OAF5E,aAAa,CASzB;IAAD,oBAAC;CAAA;AATyB;;;;;;;;;;;;ACP1B,mB;;;;;;;;;;;ACAA,iNAAiN,eAAe,wzBAAwzB,slB;;;;;;;;;;;;;;;;;;;;;;;;;ACA/9B;AAEb;AAM5C;IAEE,2BAAoB,aAA2B;QAA3B,kBAAa,GAAb,aAAa,CAAc;IAAI,CAAC;IAEpD,oCAAQ,GAAR;IACA,CAAC;IACD,wCAAY,GAAZ,UAAa,MAAa;QACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAXM;QAAR,2DAAK,EAAE;;qDAAc;IADT,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGkC,6DAAa;OAFpC,iBAAiB,CAa7B;IAAD,wBAAC;CAAA;AAb6B;;;;;;;;;;;;ACR9B,mB;;;;;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,mB;;;;;;;;;;;ACAA,iD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPa;AACuB;AACM;AAKxE;IAEE,uBAAoB,SAAgC,EAAU,UAAsB;QAAhE,cAAS,GAAT,SAAS,CAAuB;QAAU,eAAU,GAAV,UAAU,CAAY;QAClF,IAAI,CAAC,OAAO,GAAC,IAAI,gEAAW,EAAE;aACzB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;aACxD,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAE3D,CAAC;IACF,oCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,sBAAsB,EACvD,EAAC,OAAO,EAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAC,MAAM,EAAC,CAC7D,CAAC;IACJ,CAAC;IACD,oCAAY,GAAZ,UAAa,IAAI;QACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CACzB,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,sBAAsB,EACvD,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAClC;YACE,OAAO,EAAE,IAAI,CAAC,OAAO;YACnB,OAAO,EAAE,MAAM;YACf,YAAY,EAAC,MAAM;SACtB,CACF,CAAC;IACJ,CAAC;IACD,oCAAY,GAAZ,UAAa,CAAS;QACpB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,gCAAgC,GAAG,CAAC,EACrE;YACE,OAAO,EAAE,IAAI,CAAC,OAAO;YACnB,OAAO,EAAE,MAAM;YACf,YAAY,EAAC,MAAM;SACtB,CACF,CAAC;IACJ,CAAC;IAlCU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG+B,8EAAqB,EAAsB,+DAAU;OAFzE,aAAa,CAmCzB;IAAD,oBAAC;CAAA;AAnCyB;;;;;;;;;;;;ACP1B,iCAAiC,4BAA4B,mBAAmB,uBAAuB,GAAG,C;;;;;;;;;;;ACA1G,itDAAitD,eAAe,wcAAwc,UAAU,sdAAsd,YAAY,gDAAgD,aAAa,oBAAoB,qBAAqB,8IAA8I,aAAa,qFAAqF,cAAc,8J;;;;;;;;;;;;;;;;;;;;;;;;;ACAn7F;AACtB;AAS/C;IAKE,0BAAoB,aAA4B,EAAU,GAAsB;QAA5D,kBAAa,GAAb,aAAa,CAAe;QAAU,QAAG,GAAH,GAAG,CAAmB;QAHhF,oBAAe,GAAG,EAAE,CAAC;QACrB,SAAI,GAAG,MAAM,CAAC;QAoCd,0GAA0G;QAC1G,uBAAkB,GAAW,EAAE,CAAC;IAnCoD,CAAC;IAErF,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,wCAAa,GAAb;QAAA,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;aAChC,SAAS,CAAC,UAAC,KAAc;YACxB,oBAAoB;YACpB,KAAI,CAAC,WAAW,GAAC,KAAK,CAAC;YACvB,0BAA0B;YAC1B,2BAA2B;QAC7B,CAAC,CAAC;IACJ,CAAC;IACD,uCAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC;aACpD,SAAS,CAAC,UAAC,IAAI;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IACD,uBAAuB;IACvB,sCAAW,GAAX,UAAY,CAAS;QACnB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,yCAAc,GAAd,UAAe,MAAc;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,uBAAuB;QACvB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAMD,iCAAM,GAAN;QAAA,iBASC;QARC,wCAAwC;QACxC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC;aACrD,SAAS,CAAC,UAAC,KAAK;YACf,KAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;YAAC,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAE3D,oCAAoC;QAEtC,CAAC,CAAC,CAAC;IACP,CAAC;IAnDU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAMmC,6DAAa,EAAe,+DAAiB;OALrE,gBAAgB,CAsD5B;IAAD,uBAAC;CAAA;AAtD4B;;;;;;;;;;;;;;ACV7B;AAAA;IAGI,gBAAY,IAAI,EAAE,QAAQ;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACPD;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http'\nimport { Config } from '../../node_modules/protractor';\nimport {Server} from './server';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountServiceService {\n  servers:Server[]=[\n    //new Server('local', 'http://localhost:8000'),\n    new Server('base1', 'https://schoolkamanager.herokuapp.com')\n  ]\n  found_server=false;\n  server_base_url:String;\n  token:string=\"\";\n  constructor(private http:HttpClient) { }\n  checkServer(fun_sucess=(server)=>{}, fun_error=()=>{}){\n    // this will automatically assign to available server serial wise\n    try{\n    this.servers.forEach(element => {\n      // sending get request\n      this.http.get<Config>(element.base_url).subscribe((Response)=>{\n        this.found_server=true;\n        this.server_base_url = element.base_url;\n        fun_sucess(element);\n      }, (err)=>{/*console.clear();*/})\n    });\n  }catch(error){  }\n}\n  onSignIn(id_token, fun=(data)=>{console.log(\"service onSignIn\", data)}){\n    //fun(null);\n    \n    this.http.post<Config>(\n        this.server_base_url+\"/onLogin?data=2\", \n        new HttpParams().set('id_token', id_token).toString(),\n        {\n          headers:new HttpHeaders()\n            .set('Content-Type', 'application/x-www-form-urlencoded')\n        })\n          .subscribe((data:Config)=>{\n            //console.log('I was here', data);\n              if(data['status'] == 1){\n                // yee login sucessfull\n                this.token = data['token'];\n                //console.log(this.token);\n                fun(data);\n              }\n        });\n  }\n\n}\n","module.exports = \".logo-img {\\r\\n  -webkit-animation: spin 6s linear infinite; /* Safari */\\r\\n  animation: spin 6s linear infinite;\\r\\n }\\r\\n @-webkit-keyframes spin {\\r\\n    0% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n    100% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  }\\r\\n @keyframes spin {\\r\\n    0% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n    100% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  }\\r\\n\"","module.exports = \"\\n<div *ngIf=\\\"server_resolved==1\\\">\\n\\n\\n\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-white\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img class=\\\"logo-img\\\" src=\\\"./favicon.ico\\\" alt=\\\"logo\\\" style=\\\"width: 30px; height: 30px;\\\">\\n        School Manager\\n      </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        </ul>\\n        <div *ngIf=\\\"login_status!=1\\\" (click)=\\\"socialSignIn('google')\\\" id=\\\"google-signin-btn\\\">Sign in with Google</div>\\n        <img class=\\\"my-2 my-sm-0\\\" *ngIf=\\\"login_status==1\\\"\\n          src=\\\"{{ account.profile.getImageUrl()}}\\\" alt=\\\"profile picture\\\"\\n          style=\\\"width: 40px\\\"\\n          data-toggle=\\\"modal\\\" data-target=\\\"#AccountInfo\\\"\\n          >\\n        <a *ngIf=\\\"login_status==1\\\" (click)=\\\"onSignout()\\\" href=\\\"#\\\" class=\\\"btn btn-warning\\\">Logout</a>\\n    </div>\\n  </nav>\\n      <div *ngIf=\\\"login_status!=0\\\"><app-schools></app-schools></div>\\n      <div *ngIf=\\\"login_status==0\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title text-primary\\\">About</h5>\\n            <p class=\\\"card-text\\\">\\n              School Manger has an aim to reduce the burden of teachers and students by taking care of basic tasks.\\n              We try to take care of all the requirements u have and provide a digital solution to it. currently we provide\\n              these basic facilities</p>\\n\\n              <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm\\\">\\n                    <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title text-primary\\\">Attandence</h5>\\n                        <p class=\\\"card-text\\\">\\n                          We prepared an effecient way of taking attendance,\\n                          which wont take much time. This has three different way of taking on is the teacher verifying the peeps,\\n                          Other is sharing a code which all students will provide to mark their attendance and third require an app installation\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-sm\\\">\\n                    <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title text-primary\\\">Extraction</h5>\\n                        <p class=\\\"card-text\\\">\\n                          The data can be extracted in various formats,\\n                          so that it can easily be integrated with your school system. We currently support csv, tsv, excel sheets,\\n                          pdfs etc.\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-sm\\\">\\n                    <div class=\\\"card\\\">\\n                      <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title text-primary\\\">Support</h5>\\n                        <p class=\\\"card-text\\\">\\n                          Need help in getting started / want specific technical support etc, we are always there for you. Our aim is\\n                          to improve education system, and take in big step in digitilation India.\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <div *ngIf=\\\"login_status==1\\\" class=\\\"modal fade\\\" id=\\\"AccountInfo\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLongTitle\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">{{ account.profile.getName() }}</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"{{ account.profile.getName()}}\\\" placeholder=\\\"Your Name\\\">\\n              </div>\\n              <div class=\\\"input-group\\\">\\n                <textarea name=\\\"details\\\" cols=\\\"30\\\" rows=\\\"3\\\" class=\\\"form-control\\\" placeholder=\\\"Details\\\"></textarea>\\n              </div>\\n\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n</div>\\n<div *ngIf=\\\"server_resolved==0\\\" id=\\\"loading\\\">\\n        <br><br><br>\\n          <div class=\\\"container\\\">\\n                    <img class=\\\"rounded mx-auto d-block logo-img\\\" src=\\\"./favicon.ico\\\" alt=\\\"logo\\\" id=\\\"loading-image\\\">\\n            </div>\\n            <br><br>\\n            <div class=\\\"container\\\">\\n                <p class=\\\"text-center text-primary\\\">Finishing up my tea...</p>\\n                <p>{{ logs }}</p>\\n            </div>\\n</div>\"","import { Component, ChangeDetectorRef, NgZone, Inject } from '@angular/core';\nimport { AccountServiceService } from './account-service.service';\nimport { Server } from './server';\n\ndeclare var gapi: any;\ndeclare var account:any;\ndeclare function onSignIn(): any;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n  login_status = 0;\n  server_resolved = 0; server: Server;\n  logs = '';\n  \n  account = {\n    onSignIn:(googleUser) => {this.onSignIn(googleUser);},\n    profile:null\n  };\n  data = {'csrf': ''};\n  constructor(\n    private cdr:ChangeDetectorRef,\n    private accountService:AccountServiceService, \n    @Inject(NgZone) private zone: NgZone) {\n  }\n  ngOnInit(): void {\n    account=this.account;\n    this.gapi_AfterLoad();\n  }\n  onSignIn(googleUser){\n    \n    var id_token = googleUser.getAuthResponse().id_token;\n    var profile = googleUser.getBasicProfile();\n    \n    this.account.profile=profile;\n    console.log(\"Welcome \", profile.getName(), \". If you are not sure, please dont use this console, it may leak your info to others\");\n    this.accountService.onSignIn(id_token, (data:string)=>{\n      this.login_status=1;\n      this.cdr.detectChanges();\n    });\n  }\n  onSignout(){\n    var auth2 = gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      \n      window.location.reload();\n    });\n  }\n  \n  gapi_AfterLoad(){\n    /*console.log('asd');\n    if(typeof(gapi)==\"undefined\"){\n      setTimeout(()=>this.gapi_AfterLoad(), 1000);    \n    }\n    else if(gapi.auth2===undefined){\n      setTimeout(()=>this.gapi_AfterLoad(), 1000);\n    }else{\n     */ \n       this.accountService.checkServer((server: Server) => {\n          this.server_resolved = 1;\n          this.server = server;\n          this.cdr.detectChanges();\n          gapi.signin2.render('google-signin-btn', {\n            'scope': 'profile email',\n            'theme': 'light',\n            'onsuccess':account.onSignIn\n          });\n\n      });\n    //}\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NgZone } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SchoolsComponent } from './schools/schools.component';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { SchoolDetailComponent } from './schools/school-detail/school-detail.component';\nimport { SettingsComponent } from './schools/school-detail/settings/settings.component';\nimport { ClassesComponent } from './schools/school-detail/classes/classes.component';\nimport { TeachersComponent } from './schools/school-detail/teachers/teachers.component';\nimport { StudentsComponent } from './schools/school-detail/students/students.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    SchoolsComponent,\n    SchoolDetailComponent,\n    SettingsComponent,\n    ClassesComponent,\n    TeachersComponent,\n    StudentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    \n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(zone:NgZone){}\n}","module.exports = \"\"","module.exports = \"<p>\\n  classes works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-classes',\n  templateUrl: './classes.component.html',\n  styleUrls: ['./classes.component.css']\n})\nexport class ClassesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<main *ngIf=\\\"school\\\">\\n  <ul class=\\\"nav\\\">\\n    <li class=\\\"nav-item\\\" *ngFor=\\\"let nav of navs\\\">\\n      <a class=\\\"nav-link\\\" [class.border-bottom]=\\\"nav_selected === nav\\\" href=\\\"#\\\" (click)=\\\"changeNav(nav)\\\">{{nav.name}}</a>\\n    </li>\\n  </ul>\\n  <div *ngIf=\\\"nav_selected\\\">\\n      <app-settings *ngIf=\\\"nav_selected==navs[0]\\\" [school]=\\\"school\\\"></app-settings>\\n      <app-classes *ngIf=\\\"nav_selected==navs[1]\\\"></app-classes>\\n      <app-teachers *ngIf=\\\"nav_selected==navs[2]\\\"></app-teachers>\\n      <app-students *ngIf=\\\"nav_selected==navs[3]\\\"></app-students>\\n  </div>\\n  \\n  \\n</main>\"","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\nimport {School}from'../school'\n@Component({\n  selector: 'app-school-detail',\n  templateUrl: './school-detail.component.html',\n  styleUrls: ['./school-detail.component.css']\n})\n\nexport class SchoolDetailComponent implements OnInit {\n  navs:Nav[]=[\n    {name:'Settings'},{name:'Classes'}, new Nav('Teachers'),new Nav('Students')\n  ]\n  nav_selected:Nav\n  changeNav(nav:Nav){this.nav_selected=nav;this.cdr.detectChanges()}\n  @Input() school:School;\n  constructor(private cdr:ChangeDetectorRef) { }\n  ngOnInit() {\n    this.nav_selected=this.navs[0]\n  }\n\n}\nclass Nav{\n  name:string\n  constructor(name){this.name=name}\n}\n","import { Injectable } from '@angular/core';\nimport {AccountServiceService} from '../../../account-service.service'\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http'\nimport {School}from'../../school'\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchoolService {\n\n  constructor(private accountService:AccountServiceService, private httpClient:HttpClient) { }\n  deleteSchool(school:School){\n    return this.httpClient.delete(school.url,{\n      headers:new HttpHeaders()\n      .set(\"Authorization\", \"Token \"+this.accountService.token)\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<main>\\n  <div class=\\\"card\\\" style=\\\"width: 330px\\\">\\n    <div class=\\\"container\\\">\\n\\n        <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" value=\\\"{{ school.name }}\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-primary\\\">Change</button>\\n            </div>\\n          </div>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">Delete</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title text-danger\\\" id=\\\"exampleModalLabel\\\">Delete School?</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You Sure want to delete this school? This action is irreversible and you will loose all your database\\n            regarding this\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteSchool(school)\\\">Yaaaas</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n</main>\"","import { Component, OnInit, Input } from '@angular/core';\nimport {School} from '../../school'\nimport {SchoolService}from\"./school.service\"\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n@Input() school:School\n  constructor(private schoolService:SchoolService) { }\n\n  ngOnInit() {\n  }\n  deleteSchool(school:School){\n    console.log(school.name, \"should be deleted\", school.url);\n    this.schoolService.deleteSchool(school).subscribe((data)=>{\n      console.log(data)\n      document.location.reload();\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  students works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  teachers works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.css']\n})\nexport class TeachersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AccountServiceService } from '../account-service.service'\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http'\nimport {School}from'./school'\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchoolService {\n  headers;\n  constructor(private acService: AccountServiceService, private httpClient: HttpClient) {\n    this.headers=new HttpHeaders()\n        .set('Content-Type', 'application/x-www-form-urlencoded')\n        .set('Authorization', 'Token ' + this.acService.token)\n\n   }\n  getMySchools() {\n    return this.httpClient.get<School[]>(\n      this.acService.server_base_url + '/school/?format=json',\n      {headers:this.headers, observe: \"body\", responseType:\"json\"}\n    );\n  }\n  createSchool(name) {\n    return this.httpClient.post<School>(\n      this.acService.server_base_url + '/school/?format=json',\n      new HttpParams().set('name', name),\n      {\n        headers: this.headers,\n          observe: \"body\",\n          responseType:\"json\"\n      }\n    );\n  }\n  searchSchool(q: string) {\n    return this.httpClient.get<School[]>(\n      this.acService.server_base_url + '/school/search/?format=json&q=' + q, \n      {\n        headers: this.headers,\n          observe: \"body\",\n          responseType:\"json\"\n      }\n    );\n  }\n}\n","module.exports = \".search-school{\\n    display: inline-block;\\n    height: 100%;\\n    min-width: 200px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light\\\" style=\\\"background-color: #eee\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"> School </a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\" [class.active]=\\\"nav2=='home'\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"change_nav2('home')\\\" href=\\\"#\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [class.active]=\\\"nav2=='myschools'\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"change_nav2('myschools')\\\" href=\\\"#\\\">My Schools</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [class.active]=\\\"nav2=='search'\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"change_nav2('search')\\\" href=\\\"#\\\">Search</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"card\\\" *ngIf=\\\"nav2=='myschools'\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">My Schools</h5>\\n      <div class=\\\"row\\\">\\n  <div class=\\\"col-md-2 border-right\\\">\\n    <div class=\\\"input-group\\\">\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"School Name\\\" [(ngModel)]=\\\"new_school_name\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"createSchool()\\\">Create</button>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let school of school_list\\\"\\n          (click)=\\\"onSchoolSelect(school)\\\"\\n          [class.active]=\\\"school === selectedSchool\\\"\\n          href=\\\"#\\\" class=\\\"list-group-item list-group-item-action\\\">\\n          {{ school.name }}\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-10 float-md-left\\\">\\n    <app-school-detail [school]=\\\"selectedSchool\\\"></app-school-detail>\\n  </div>\\n\\n      </div>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"nav2=='home'\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Home</h5>\\n    <p class=\\\"card-text\\\">Content</p>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"nav2=='search'\\\">\\n  <div class=\\\"row\\\" style=\\\"width: 100%;margin: 0;\\\">\\n    <div class=\\\"col-md-4 float-md-left\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Search for a school</h5>\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"search_school_name\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"search()\\\" >Search</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-8 float-md-left\\\" style=\\\"margin: 0; padding: 0;\\\">\\n      <div class=\\\"\\\" style=\\\"height: 100%; width: 100%; overflow-x: scroll; white-space: nowrap;\\\">\\n        <div class=\\\"search-school\\\" *ngFor=\\\"let sschool of search_school_results\\\">\\n          <div class=\\\"card\\\" style=\\\"width: 100%;height: 100%;\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{sschool.name}}</h5>\\n              <p class=\\\"card-text\\\">Content</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport {SchoolService} from './school.service';\nimport{School}from'./school';\nimport { HttpEvent } from '@angular/common/http';\nimport { HttpResponse } from 'selenium-webdriver/http';\n@Component({\n  selector: 'app-schools',\n  templateUrl: './schools.component.html',\n  styleUrls: ['./schools.component.css']\n})\nexport class SchoolsComponent implements OnInit {\n  school_list:School[];\n  new_school_name = '';\n  nav2 = 'home';\n  selectedSchool: School;\n  constructor(private schoolService: SchoolService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.refreshSchool();\n  }\n  refreshSchool() {\n    this.schoolService.getMySchools()\n    .subscribe((value:School[])=>{\n      //console.log(data);\n      this.school_list=value;\n      //this.new_school_name='';\n      //this.cdr.detectChanges();\n    })\n  }\n  createSchool() {\n    this.schoolService.createSchool(this.new_school_name)\n    .subscribe((data)=>{\n      console.log(data);\n      this.refreshSchool();\n    })\n  }\n  // handling new navs //\n  change_nav2(s: string) {\n    this.nav2 = s;\n    this.cdr.detectChanges();\n  }\n\n  onSchoolSelect(school: School) {\n    this.selectedSchool = school;\n    // console.log('here');\n    this.cdr.detectChanges();\n  }\n\n\n  /* lol now we have to show 'the found schools' and also show the option to apply, this is fucking crazy */\n  search_school_name: string = '';\n  search_school_results:School[];\n  search() {\n    // console.log(this.search_school_name);\n    this.schoolService.searchSchool(this.search_school_name)\n      .subscribe((value) => { \n        this.search_school_results=value; this.cdr.detectChanges(); \n        \n        //console.log(typeof(value), value);\n        \n      });\n  }\n\n\n}\n","export class Server{\r\n    name:string;\r\n    base_url:string;\r\n    constructor(name, base_url){\r\n        this.name = name;\r\n        this.base_url = base_url;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}